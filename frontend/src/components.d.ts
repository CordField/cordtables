/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults, RouterHistory } from "@stencil/router";
import { CellType, ColumnDescription } from "./common/table-abstractions/types";
import { MenuClickedEvent } from "./components/header/types";
import { TinyUpdateEvent } from "./components/cf-tiny/types";
export namespace Components {
    interface AdminGroupMemberships {
    }
    interface AdminGroupRowAccess {
    }
    interface AdminGroups {
    }
    interface AdminPeople {
    }
    interface AdminRoleColumnGrants {
    }
    interface AdminRoleMemberships {
    }
    interface AdminRoleTablePermissions {
    }
    interface AdminRoles {
    }
    interface AdminUsers {
    }
    interface AppHome {
    }
    interface AppProfile {
        "match": MatchResults;
    }
    interface AppRoot {
        "history": RouterHistory;
    }
    interface CfCell2 {
        "cellType": CellType;
        "columnDescription": ColumnDescription;
        "rowId": number;
        "value": any;
    }
    interface CfHeader {
        "history": RouterHistory;
    }
    interface CfHeaderMenu {
        "history": RouterHistory;
    }
    interface CfLogin {
        "history": RouterHistory;
    }
    interface CfNotif {
    }
    interface CfPagination {
        "currentPage": number;
        "history": RouterHistory;
        "pageUrl": string;
        "resultsPerPage": number;
        "totalRows": number;
    }
    interface CfRegister {
        "history": RouterHistory;
    }
    interface CfRow {
        "columnData": ColumnDescription[];
        "row": any;
    }
    interface CfTable {
        "columnData": ColumnDescription[];
        "rowData": any[];
    }
    interface CfTableBody {
        "columnData": ColumnDescription[];
        "rowData": any[];
    }
    interface CfTableFooter {
    }
    interface CfTiny {
        "uid": number;
    }
    interface CommonCellChannels {
    }
    interface CommonCoalitionMemberships {
    }
    interface CommonCoalitions {
    }
    interface CommonOrganizations {
    }
    interface CommonPosts {
    }
    interface CommonPrayerNotifications {
    }
    interface CommonPrayerRequests {
    }
    interface CommonThreads {
    }
    interface CreateUpdateModal {
        "isOpen": boolean;
        "modalTitle": String;
    }
    interface DirectoriesTable {
    }
    interface DiscussionChannels {
    }
    interface EducationByPerson {
    }
    interface EducationEntries {
    }
    interface FileVersions {
    }
    interface FilesTable {
    }
    interface GenericTable {
        "columns": Array<any>;
        "name": String;
        "values": Array<any>;
    }
    interface GroupMemberships {
    }
    interface GroupsPage {
    }
    interface GroupsRowAccess {
    }
    interface GroupsTable {
    }
    interface LocationsTable {
    }
    interface OrganizationsPage {
    }
    interface OrganizationsTable {
    }
    interface PageNotFound {
        "history": RouterHistory;
    }
    interface PagePrayerRequests {
        "history": RouterHistory;
    }
    interface PageRoot {
        "match": MatchResults;
    }
    interface PeersTable {
    }
    interface PeopleTable {
    }
    interface PeopleToOrgRelationships {
    }
    interface PrayerRequestEditPage {
        "history": RouterHistory;
        "requestId": any;
    }
    interface RequestPrayerPage {
        "history": RouterHistory;
    }
    interface RoleColumnGrants {
        "history": RouterHistory;
    }
    interface RoleMemberships {
    }
    interface RoleTablePermissions {
    }
    interface RolesPage {
    }
    interface RolesTable {
    }
    interface ScBudgetRecords {
    }
    interface ScBudgets {
    }
    interface ScCeremonies {
    }
    interface ScChangeToPlan {
    }
    interface ScFieldRegionsTable {
    }
    interface ScFieldZones {
    }
    interface ScFundingAccounts {
    }
    interface ScGlobalPartnerAssessments {
    }
    interface ScGlobalPartnerEngagementPeople {
    }
    interface ScGlobalPartnerEngagements {
    }
    interface ScGlobalPartnerPerformance {
    }
    interface ScInternshipEngagements {
    }
    interface ScKnownLanguagesByPerson {
    }
    interface ScLanguageEngagements {
    }
    interface ScLanguages {
    }
    interface ScLocations {
    }
    interface ScOrganizationLocations {
    }
    interface ScOrganizations {
    }
    interface ScPartners {
    }
    interface ScPartnerships {
    }
    interface ScPeople {
    }
    interface ScPersonUnavailabilities {
    }
    interface ScPinnedProjects {
    }
    interface ScPosts {
    }
    interface ScProductScriptureReferences {
    }
    interface ScProducts {
    }
    interface ScProjectLocations {
    }
    interface ScProjects {
    }
    interface ScriptureReferences {
    }
    interface SilCountryCodes {
    }
    interface SilLanguageIndex {
    }
    interface SilLanguagesCodes {
    }
    interface SilTableOfLanguages {
    }
    interface SiteText {
    }
    interface StageGraph {
    }
    interface StageNotifications {
    }
    interface StageRoleColumnGrants {
    }
    interface StagesTable {
    }
    interface TableRoot {
        "match": MatchResults;
    }
    interface TicketAssignments {
    }
    interface TicketFeedback {
    }
    interface TicketGraph {
    }
    interface TicketsTable {
    }
    interface UsersTable {
    }
    interface WorkEstimates {
    }
    interface WorkRecords {
    }
    interface WorkflowsTable {
    }
}
declare global {
    interface HTMLAdminGroupMembershipsElement extends Components.AdminGroupMemberships, HTMLStencilElement {
    }
    var HTMLAdminGroupMembershipsElement: {
        prototype: HTMLAdminGroupMembershipsElement;
        new (): HTMLAdminGroupMembershipsElement;
    };
    interface HTMLAdminGroupRowAccessElement extends Components.AdminGroupRowAccess, HTMLStencilElement {
    }
    var HTMLAdminGroupRowAccessElement: {
        prototype: HTMLAdminGroupRowAccessElement;
        new (): HTMLAdminGroupRowAccessElement;
    };
    interface HTMLAdminGroupsElement extends Components.AdminGroups, HTMLStencilElement {
    }
    var HTMLAdminGroupsElement: {
        prototype: HTMLAdminGroupsElement;
        new (): HTMLAdminGroupsElement;
    };
    interface HTMLAdminPeopleElement extends Components.AdminPeople, HTMLStencilElement {
    }
    var HTMLAdminPeopleElement: {
        prototype: HTMLAdminPeopleElement;
        new (): HTMLAdminPeopleElement;
    };
    interface HTMLAdminRoleColumnGrantsElement extends Components.AdminRoleColumnGrants, HTMLStencilElement {
    }
    var HTMLAdminRoleColumnGrantsElement: {
        prototype: HTMLAdminRoleColumnGrantsElement;
        new (): HTMLAdminRoleColumnGrantsElement;
    };
    interface HTMLAdminRoleMembershipsElement extends Components.AdminRoleMemberships, HTMLStencilElement {
    }
    var HTMLAdminRoleMembershipsElement: {
        prototype: HTMLAdminRoleMembershipsElement;
        new (): HTMLAdminRoleMembershipsElement;
    };
    interface HTMLAdminRoleTablePermissionsElement extends Components.AdminRoleTablePermissions, HTMLStencilElement {
    }
    var HTMLAdminRoleTablePermissionsElement: {
        prototype: HTMLAdminRoleTablePermissionsElement;
        new (): HTMLAdminRoleTablePermissionsElement;
    };
    interface HTMLAdminRolesElement extends Components.AdminRoles, HTMLStencilElement {
    }
    var HTMLAdminRolesElement: {
        prototype: HTMLAdminRolesElement;
        new (): HTMLAdminRolesElement;
    };
    interface HTMLAdminUsersElement extends Components.AdminUsers, HTMLStencilElement {
    }
    var HTMLAdminUsersElement: {
        prototype: HTMLAdminUsersElement;
        new (): HTMLAdminUsersElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLCfCell2Element extends Components.CfCell2, HTMLStencilElement {
    }
    var HTMLCfCell2Element: {
        prototype: HTMLCfCell2Element;
        new (): HTMLCfCell2Element;
    };
    interface HTMLCfHeaderElement extends Components.CfHeader, HTMLStencilElement {
    }
    var HTMLCfHeaderElement: {
        prototype: HTMLCfHeaderElement;
        new (): HTMLCfHeaderElement;
    };
    interface HTMLCfHeaderMenuElement extends Components.CfHeaderMenu, HTMLStencilElement {
    }
    var HTMLCfHeaderMenuElement: {
        prototype: HTMLCfHeaderMenuElement;
        new (): HTMLCfHeaderMenuElement;
    };
    interface HTMLCfLoginElement extends Components.CfLogin, HTMLStencilElement {
    }
    var HTMLCfLoginElement: {
        prototype: HTMLCfLoginElement;
        new (): HTMLCfLoginElement;
    };
    interface HTMLCfNotifElement extends Components.CfNotif, HTMLStencilElement {
    }
    var HTMLCfNotifElement: {
        prototype: HTMLCfNotifElement;
        new (): HTMLCfNotifElement;
    };
    interface HTMLCfPaginationElement extends Components.CfPagination, HTMLStencilElement {
    }
    var HTMLCfPaginationElement: {
        prototype: HTMLCfPaginationElement;
        new (): HTMLCfPaginationElement;
    };
    interface HTMLCfRegisterElement extends Components.CfRegister, HTMLStencilElement {
    }
    var HTMLCfRegisterElement: {
        prototype: HTMLCfRegisterElement;
        new (): HTMLCfRegisterElement;
    };
    interface HTMLCfRowElement extends Components.CfRow, HTMLStencilElement {
    }
    var HTMLCfRowElement: {
        prototype: HTMLCfRowElement;
        new (): HTMLCfRowElement;
    };
    interface HTMLCfTableElement extends Components.CfTable, HTMLStencilElement {
    }
    var HTMLCfTableElement: {
        prototype: HTMLCfTableElement;
        new (): HTMLCfTableElement;
    };
    interface HTMLCfTableBodyElement extends Components.CfTableBody, HTMLStencilElement {
    }
    var HTMLCfTableBodyElement: {
        prototype: HTMLCfTableBodyElement;
        new (): HTMLCfTableBodyElement;
    };
    interface HTMLCfTableFooterElement extends Components.CfTableFooter, HTMLStencilElement {
    }
    var HTMLCfTableFooterElement: {
        prototype: HTMLCfTableFooterElement;
        new (): HTMLCfTableFooterElement;
    };
    interface HTMLCfTinyElement extends Components.CfTiny, HTMLStencilElement {
    }
    var HTMLCfTinyElement: {
        prototype: HTMLCfTinyElement;
        new (): HTMLCfTinyElement;
    };
    interface HTMLCommonCellChannelsElement extends Components.CommonCellChannels, HTMLStencilElement {
    }
    var HTMLCommonCellChannelsElement: {
        prototype: HTMLCommonCellChannelsElement;
        new (): HTMLCommonCellChannelsElement;
    };
    interface HTMLCommonCoalitionMembershipsElement extends Components.CommonCoalitionMemberships, HTMLStencilElement {
    }
    var HTMLCommonCoalitionMembershipsElement: {
        prototype: HTMLCommonCoalitionMembershipsElement;
        new (): HTMLCommonCoalitionMembershipsElement;
    };
    interface HTMLCommonCoalitionsElement extends Components.CommonCoalitions, HTMLStencilElement {
    }
    var HTMLCommonCoalitionsElement: {
        prototype: HTMLCommonCoalitionsElement;
        new (): HTMLCommonCoalitionsElement;
    };
    interface HTMLCommonOrganizationsElement extends Components.CommonOrganizations, HTMLStencilElement {
    }
    var HTMLCommonOrganizationsElement: {
        prototype: HTMLCommonOrganizationsElement;
        new (): HTMLCommonOrganizationsElement;
    };
    interface HTMLCommonPostsElement extends Components.CommonPosts, HTMLStencilElement {
    }
    var HTMLCommonPostsElement: {
        prototype: HTMLCommonPostsElement;
        new (): HTMLCommonPostsElement;
    };
    interface HTMLCommonPrayerNotificationsElement extends Components.CommonPrayerNotifications, HTMLStencilElement {
    }
    var HTMLCommonPrayerNotificationsElement: {
        prototype: HTMLCommonPrayerNotificationsElement;
        new (): HTMLCommonPrayerNotificationsElement;
    };
    interface HTMLCommonPrayerRequestsElement extends Components.CommonPrayerRequests, HTMLStencilElement {
    }
    var HTMLCommonPrayerRequestsElement: {
        prototype: HTMLCommonPrayerRequestsElement;
        new (): HTMLCommonPrayerRequestsElement;
    };
    interface HTMLCommonThreadsElement extends Components.CommonThreads, HTMLStencilElement {
    }
    var HTMLCommonThreadsElement: {
        prototype: HTMLCommonThreadsElement;
        new (): HTMLCommonThreadsElement;
    };
    interface HTMLCreateUpdateModalElement extends Components.CreateUpdateModal, HTMLStencilElement {
    }
    var HTMLCreateUpdateModalElement: {
        prototype: HTMLCreateUpdateModalElement;
        new (): HTMLCreateUpdateModalElement;
    };
    interface HTMLDirectoriesTableElement extends Components.DirectoriesTable, HTMLStencilElement {
    }
    var HTMLDirectoriesTableElement: {
        prototype: HTMLDirectoriesTableElement;
        new (): HTMLDirectoriesTableElement;
    };
    interface HTMLDiscussionChannelsElement extends Components.DiscussionChannels, HTMLStencilElement {
    }
    var HTMLDiscussionChannelsElement: {
        prototype: HTMLDiscussionChannelsElement;
        new (): HTMLDiscussionChannelsElement;
    };
    interface HTMLEducationByPersonElement extends Components.EducationByPerson, HTMLStencilElement {
    }
    var HTMLEducationByPersonElement: {
        prototype: HTMLEducationByPersonElement;
        new (): HTMLEducationByPersonElement;
    };
    interface HTMLEducationEntriesElement extends Components.EducationEntries, HTMLStencilElement {
    }
    var HTMLEducationEntriesElement: {
        prototype: HTMLEducationEntriesElement;
        new (): HTMLEducationEntriesElement;
    };
    interface HTMLFileVersionsElement extends Components.FileVersions, HTMLStencilElement {
    }
    var HTMLFileVersionsElement: {
        prototype: HTMLFileVersionsElement;
        new (): HTMLFileVersionsElement;
    };
    interface HTMLFilesTableElement extends Components.FilesTable, HTMLStencilElement {
    }
    var HTMLFilesTableElement: {
        prototype: HTMLFilesTableElement;
        new (): HTMLFilesTableElement;
    };
    interface HTMLGenericTableElement extends Components.GenericTable, HTMLStencilElement {
    }
    var HTMLGenericTableElement: {
        prototype: HTMLGenericTableElement;
        new (): HTMLGenericTableElement;
    };
    interface HTMLGroupMembershipsElement extends Components.GroupMemberships, HTMLStencilElement {
    }
    var HTMLGroupMembershipsElement: {
        prototype: HTMLGroupMembershipsElement;
        new (): HTMLGroupMembershipsElement;
    };
    interface HTMLGroupsPageElement extends Components.GroupsPage, HTMLStencilElement {
    }
    var HTMLGroupsPageElement: {
        prototype: HTMLGroupsPageElement;
        new (): HTMLGroupsPageElement;
    };
    interface HTMLGroupsRowAccessElement extends Components.GroupsRowAccess, HTMLStencilElement {
    }
    var HTMLGroupsRowAccessElement: {
        prototype: HTMLGroupsRowAccessElement;
        new (): HTMLGroupsRowAccessElement;
    };
    interface HTMLGroupsTableElement extends Components.GroupsTable, HTMLStencilElement {
    }
    var HTMLGroupsTableElement: {
        prototype: HTMLGroupsTableElement;
        new (): HTMLGroupsTableElement;
    };
    interface HTMLLocationsTableElement extends Components.LocationsTable, HTMLStencilElement {
    }
    var HTMLLocationsTableElement: {
        prototype: HTMLLocationsTableElement;
        new (): HTMLLocationsTableElement;
    };
    interface HTMLOrganizationsPageElement extends Components.OrganizationsPage, HTMLStencilElement {
    }
    var HTMLOrganizationsPageElement: {
        prototype: HTMLOrganizationsPageElement;
        new (): HTMLOrganizationsPageElement;
    };
    interface HTMLOrganizationsTableElement extends Components.OrganizationsTable, HTMLStencilElement {
    }
    var HTMLOrganizationsTableElement: {
        prototype: HTMLOrganizationsTableElement;
        new (): HTMLOrganizationsTableElement;
    };
    interface HTMLPageNotFoundElement extends Components.PageNotFound, HTMLStencilElement {
    }
    var HTMLPageNotFoundElement: {
        prototype: HTMLPageNotFoundElement;
        new (): HTMLPageNotFoundElement;
    };
    interface HTMLPagePrayerRequestsElement extends Components.PagePrayerRequests, HTMLStencilElement {
    }
    var HTMLPagePrayerRequestsElement: {
        prototype: HTMLPagePrayerRequestsElement;
        new (): HTMLPagePrayerRequestsElement;
    };
    interface HTMLPageRootElement extends Components.PageRoot, HTMLStencilElement {
    }
    var HTMLPageRootElement: {
        prototype: HTMLPageRootElement;
        new (): HTMLPageRootElement;
    };
    interface HTMLPeersTableElement extends Components.PeersTable, HTMLStencilElement {
    }
    var HTMLPeersTableElement: {
        prototype: HTMLPeersTableElement;
        new (): HTMLPeersTableElement;
    };
    interface HTMLPeopleTableElement extends Components.PeopleTable, HTMLStencilElement {
    }
    var HTMLPeopleTableElement: {
        prototype: HTMLPeopleTableElement;
        new (): HTMLPeopleTableElement;
    };
    interface HTMLPeopleToOrgRelationshipsElement extends Components.PeopleToOrgRelationships, HTMLStencilElement {
    }
    var HTMLPeopleToOrgRelationshipsElement: {
        prototype: HTMLPeopleToOrgRelationshipsElement;
        new (): HTMLPeopleToOrgRelationshipsElement;
    };
    interface HTMLPrayerRequestEditPageElement extends Components.PrayerRequestEditPage, HTMLStencilElement {
    }
    var HTMLPrayerRequestEditPageElement: {
        prototype: HTMLPrayerRequestEditPageElement;
        new (): HTMLPrayerRequestEditPageElement;
    };
    interface HTMLRequestPrayerPageElement extends Components.RequestPrayerPage, HTMLStencilElement {
    }
    var HTMLRequestPrayerPageElement: {
        prototype: HTMLRequestPrayerPageElement;
        new (): HTMLRequestPrayerPageElement;
    };
    interface HTMLRoleColumnGrantsElement extends Components.RoleColumnGrants, HTMLStencilElement {
    }
    var HTMLRoleColumnGrantsElement: {
        prototype: HTMLRoleColumnGrantsElement;
        new (): HTMLRoleColumnGrantsElement;
    };
    interface HTMLRoleMembershipsElement extends Components.RoleMemberships, HTMLStencilElement {
    }
    var HTMLRoleMembershipsElement: {
        prototype: HTMLRoleMembershipsElement;
        new (): HTMLRoleMembershipsElement;
    };
    interface HTMLRoleTablePermissionsElement extends Components.RoleTablePermissions, HTMLStencilElement {
    }
    var HTMLRoleTablePermissionsElement: {
        prototype: HTMLRoleTablePermissionsElement;
        new (): HTMLRoleTablePermissionsElement;
    };
    interface HTMLRolesPageElement extends Components.RolesPage, HTMLStencilElement {
    }
    var HTMLRolesPageElement: {
        prototype: HTMLRolesPageElement;
        new (): HTMLRolesPageElement;
    };
    interface HTMLRolesTableElement extends Components.RolesTable, HTMLStencilElement {
    }
    var HTMLRolesTableElement: {
        prototype: HTMLRolesTableElement;
        new (): HTMLRolesTableElement;
    };
    interface HTMLScBudgetRecordsElement extends Components.ScBudgetRecords, HTMLStencilElement {
    }
    var HTMLScBudgetRecordsElement: {
        prototype: HTMLScBudgetRecordsElement;
        new (): HTMLScBudgetRecordsElement;
    };
    interface HTMLScBudgetsElement extends Components.ScBudgets, HTMLStencilElement {
    }
    var HTMLScBudgetsElement: {
        prototype: HTMLScBudgetsElement;
        new (): HTMLScBudgetsElement;
    };
    interface HTMLScCeremoniesElement extends Components.ScCeremonies, HTMLStencilElement {
    }
    var HTMLScCeremoniesElement: {
        prototype: HTMLScCeremoniesElement;
        new (): HTMLScCeremoniesElement;
    };
    interface HTMLScChangeToPlanElement extends Components.ScChangeToPlan, HTMLStencilElement {
    }
    var HTMLScChangeToPlanElement: {
        prototype: HTMLScChangeToPlanElement;
        new (): HTMLScChangeToPlanElement;
    };
    interface HTMLScFieldRegionsTableElement extends Components.ScFieldRegionsTable, HTMLStencilElement {
    }
    var HTMLScFieldRegionsTableElement: {
        prototype: HTMLScFieldRegionsTableElement;
        new (): HTMLScFieldRegionsTableElement;
    };
    interface HTMLScFieldZonesElement extends Components.ScFieldZones, HTMLStencilElement {
    }
    var HTMLScFieldZonesElement: {
        prototype: HTMLScFieldZonesElement;
        new (): HTMLScFieldZonesElement;
    };
    interface HTMLScFundingAccountsElement extends Components.ScFundingAccounts, HTMLStencilElement {
    }
    var HTMLScFundingAccountsElement: {
        prototype: HTMLScFundingAccountsElement;
        new (): HTMLScFundingAccountsElement;
    };
    interface HTMLScGlobalPartnerAssessmentsElement extends Components.ScGlobalPartnerAssessments, HTMLStencilElement {
    }
    var HTMLScGlobalPartnerAssessmentsElement: {
        prototype: HTMLScGlobalPartnerAssessmentsElement;
        new (): HTMLScGlobalPartnerAssessmentsElement;
    };
    interface HTMLScGlobalPartnerEngagementPeopleElement extends Components.ScGlobalPartnerEngagementPeople, HTMLStencilElement {
    }
    var HTMLScGlobalPartnerEngagementPeopleElement: {
        prototype: HTMLScGlobalPartnerEngagementPeopleElement;
        new (): HTMLScGlobalPartnerEngagementPeopleElement;
    };
    interface HTMLScGlobalPartnerEngagementsElement extends Components.ScGlobalPartnerEngagements, HTMLStencilElement {
    }
    var HTMLScGlobalPartnerEngagementsElement: {
        prototype: HTMLScGlobalPartnerEngagementsElement;
        new (): HTMLScGlobalPartnerEngagementsElement;
    };
    interface HTMLScGlobalPartnerPerformanceElement extends Components.ScGlobalPartnerPerformance, HTMLStencilElement {
    }
    var HTMLScGlobalPartnerPerformanceElement: {
        prototype: HTMLScGlobalPartnerPerformanceElement;
        new (): HTMLScGlobalPartnerPerformanceElement;
    };
    interface HTMLScInternshipEngagementsElement extends Components.ScInternshipEngagements, HTMLStencilElement {
    }
    var HTMLScInternshipEngagementsElement: {
        prototype: HTMLScInternshipEngagementsElement;
        new (): HTMLScInternshipEngagementsElement;
    };
    interface HTMLScKnownLanguagesByPersonElement extends Components.ScKnownLanguagesByPerson, HTMLStencilElement {
    }
    var HTMLScKnownLanguagesByPersonElement: {
        prototype: HTMLScKnownLanguagesByPersonElement;
        new (): HTMLScKnownLanguagesByPersonElement;
    };
    interface HTMLScLanguageEngagementsElement extends Components.ScLanguageEngagements, HTMLStencilElement {
    }
    var HTMLScLanguageEngagementsElement: {
        prototype: HTMLScLanguageEngagementsElement;
        new (): HTMLScLanguageEngagementsElement;
    };
    interface HTMLScLanguagesElement extends Components.ScLanguages, HTMLStencilElement {
    }
    var HTMLScLanguagesElement: {
        prototype: HTMLScLanguagesElement;
        new (): HTMLScLanguagesElement;
    };
    interface HTMLScLocationsElement extends Components.ScLocations, HTMLStencilElement {
    }
    var HTMLScLocationsElement: {
        prototype: HTMLScLocationsElement;
        new (): HTMLScLocationsElement;
    };
    interface HTMLScOrganizationLocationsElement extends Components.ScOrganizationLocations, HTMLStencilElement {
    }
    var HTMLScOrganizationLocationsElement: {
        prototype: HTMLScOrganizationLocationsElement;
        new (): HTMLScOrganizationLocationsElement;
    };
    interface HTMLScOrganizationsElement extends Components.ScOrganizations, HTMLStencilElement {
    }
    var HTMLScOrganizationsElement: {
        prototype: HTMLScOrganizationsElement;
        new (): HTMLScOrganizationsElement;
    };
    interface HTMLScPartnersElement extends Components.ScPartners, HTMLStencilElement {
    }
    var HTMLScPartnersElement: {
        prototype: HTMLScPartnersElement;
        new (): HTMLScPartnersElement;
    };
    interface HTMLScPartnershipsElement extends Components.ScPartnerships, HTMLStencilElement {
    }
    var HTMLScPartnershipsElement: {
        prototype: HTMLScPartnershipsElement;
        new (): HTMLScPartnershipsElement;
    };
    interface HTMLScPeopleElement extends Components.ScPeople, HTMLStencilElement {
    }
    var HTMLScPeopleElement: {
        prototype: HTMLScPeopleElement;
        new (): HTMLScPeopleElement;
    };
    interface HTMLScPersonUnavailabilitiesElement extends Components.ScPersonUnavailabilities, HTMLStencilElement {
    }
    var HTMLScPersonUnavailabilitiesElement: {
        prototype: HTMLScPersonUnavailabilitiesElement;
        new (): HTMLScPersonUnavailabilitiesElement;
    };
    interface HTMLScPinnedProjectsElement extends Components.ScPinnedProjects, HTMLStencilElement {
    }
    var HTMLScPinnedProjectsElement: {
        prototype: HTMLScPinnedProjectsElement;
        new (): HTMLScPinnedProjectsElement;
    };
    interface HTMLScPostsElement extends Components.ScPosts, HTMLStencilElement {
    }
    var HTMLScPostsElement: {
        prototype: HTMLScPostsElement;
        new (): HTMLScPostsElement;
    };
    interface HTMLScProductScriptureReferencesElement extends Components.ScProductScriptureReferences, HTMLStencilElement {
    }
    var HTMLScProductScriptureReferencesElement: {
        prototype: HTMLScProductScriptureReferencesElement;
        new (): HTMLScProductScriptureReferencesElement;
    };
    interface HTMLScProductsElement extends Components.ScProducts, HTMLStencilElement {
    }
    var HTMLScProductsElement: {
        prototype: HTMLScProductsElement;
        new (): HTMLScProductsElement;
    };
    interface HTMLScProjectLocationsElement extends Components.ScProjectLocations, HTMLStencilElement {
    }
    var HTMLScProjectLocationsElement: {
        prototype: HTMLScProjectLocationsElement;
        new (): HTMLScProjectLocationsElement;
    };
    interface HTMLScProjectsElement extends Components.ScProjects, HTMLStencilElement {
    }
    var HTMLScProjectsElement: {
        prototype: HTMLScProjectsElement;
        new (): HTMLScProjectsElement;
    };
    interface HTMLScriptureReferencesElement extends Components.ScriptureReferences, HTMLStencilElement {
    }
    var HTMLScriptureReferencesElement: {
        prototype: HTMLScriptureReferencesElement;
        new (): HTMLScriptureReferencesElement;
    };
    interface HTMLSilCountryCodesElement extends Components.SilCountryCodes, HTMLStencilElement {
    }
    var HTMLSilCountryCodesElement: {
        prototype: HTMLSilCountryCodesElement;
        new (): HTMLSilCountryCodesElement;
    };
    interface HTMLSilLanguageIndexElement extends Components.SilLanguageIndex, HTMLStencilElement {
    }
    var HTMLSilLanguageIndexElement: {
        prototype: HTMLSilLanguageIndexElement;
        new (): HTMLSilLanguageIndexElement;
    };
    interface HTMLSilLanguagesCodesElement extends Components.SilLanguagesCodes, HTMLStencilElement {
    }
    var HTMLSilLanguagesCodesElement: {
        prototype: HTMLSilLanguagesCodesElement;
        new (): HTMLSilLanguagesCodesElement;
    };
    interface HTMLSilTableOfLanguagesElement extends Components.SilTableOfLanguages, HTMLStencilElement {
    }
    var HTMLSilTableOfLanguagesElement: {
        prototype: HTMLSilTableOfLanguagesElement;
        new (): HTMLSilTableOfLanguagesElement;
    };
    interface HTMLSiteTextElement extends Components.SiteText, HTMLStencilElement {
    }
    var HTMLSiteTextElement: {
        prototype: HTMLSiteTextElement;
        new (): HTMLSiteTextElement;
    };
    interface HTMLStageGraphElement extends Components.StageGraph, HTMLStencilElement {
    }
    var HTMLStageGraphElement: {
        prototype: HTMLStageGraphElement;
        new (): HTMLStageGraphElement;
    };
    interface HTMLStageNotificationsElement extends Components.StageNotifications, HTMLStencilElement {
    }
    var HTMLStageNotificationsElement: {
        prototype: HTMLStageNotificationsElement;
        new (): HTMLStageNotificationsElement;
    };
    interface HTMLStageRoleColumnGrantsElement extends Components.StageRoleColumnGrants, HTMLStencilElement {
    }
    var HTMLStageRoleColumnGrantsElement: {
        prototype: HTMLStageRoleColumnGrantsElement;
        new (): HTMLStageRoleColumnGrantsElement;
    };
    interface HTMLStagesTableElement extends Components.StagesTable, HTMLStencilElement {
    }
    var HTMLStagesTableElement: {
        prototype: HTMLStagesTableElement;
        new (): HTMLStagesTableElement;
    };
    interface HTMLTableRootElement extends Components.TableRoot, HTMLStencilElement {
    }
    var HTMLTableRootElement: {
        prototype: HTMLTableRootElement;
        new (): HTMLTableRootElement;
    };
    interface HTMLTicketAssignmentsElement extends Components.TicketAssignments, HTMLStencilElement {
    }
    var HTMLTicketAssignmentsElement: {
        prototype: HTMLTicketAssignmentsElement;
        new (): HTMLTicketAssignmentsElement;
    };
    interface HTMLTicketFeedbackElement extends Components.TicketFeedback, HTMLStencilElement {
    }
    var HTMLTicketFeedbackElement: {
        prototype: HTMLTicketFeedbackElement;
        new (): HTMLTicketFeedbackElement;
    };
    interface HTMLTicketGraphElement extends Components.TicketGraph, HTMLStencilElement {
    }
    var HTMLTicketGraphElement: {
        prototype: HTMLTicketGraphElement;
        new (): HTMLTicketGraphElement;
    };
    interface HTMLTicketsTableElement extends Components.TicketsTable, HTMLStencilElement {
    }
    var HTMLTicketsTableElement: {
        prototype: HTMLTicketsTableElement;
        new (): HTMLTicketsTableElement;
    };
    interface HTMLUsersTableElement extends Components.UsersTable, HTMLStencilElement {
    }
    var HTMLUsersTableElement: {
        prototype: HTMLUsersTableElement;
        new (): HTMLUsersTableElement;
    };
    interface HTMLWorkEstimatesElement extends Components.WorkEstimates, HTMLStencilElement {
    }
    var HTMLWorkEstimatesElement: {
        prototype: HTMLWorkEstimatesElement;
        new (): HTMLWorkEstimatesElement;
    };
    interface HTMLWorkRecordsElement extends Components.WorkRecords, HTMLStencilElement {
    }
    var HTMLWorkRecordsElement: {
        prototype: HTMLWorkRecordsElement;
        new (): HTMLWorkRecordsElement;
    };
    interface HTMLWorkflowsTableElement extends Components.WorkflowsTable, HTMLStencilElement {
    }
    var HTMLWorkflowsTableElement: {
        prototype: HTMLWorkflowsTableElement;
        new (): HTMLWorkflowsTableElement;
    };
    interface HTMLElementTagNameMap {
        "admin-group-memberships": HTMLAdminGroupMembershipsElement;
        "admin-group-row-access": HTMLAdminGroupRowAccessElement;
        "admin-groups": HTMLAdminGroupsElement;
        "admin-people": HTMLAdminPeopleElement;
        "admin-role-column-grants": HTMLAdminRoleColumnGrantsElement;
        "admin-role-memberships": HTMLAdminRoleMembershipsElement;
        "admin-role-table-permissions": HTMLAdminRoleTablePermissionsElement;
        "admin-roles": HTMLAdminRolesElement;
        "admin-users": HTMLAdminUsersElement;
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "cf-cell2": HTMLCfCell2Element;
        "cf-header": HTMLCfHeaderElement;
        "cf-header-menu": HTMLCfHeaderMenuElement;
        "cf-login": HTMLCfLoginElement;
        "cf-notif": HTMLCfNotifElement;
        "cf-pagination": HTMLCfPaginationElement;
        "cf-register": HTMLCfRegisterElement;
        "cf-row": HTMLCfRowElement;
        "cf-table": HTMLCfTableElement;
        "cf-table-body": HTMLCfTableBodyElement;
        "cf-table-footer": HTMLCfTableFooterElement;
        "cf-tiny": HTMLCfTinyElement;
        "common-cell-channels": HTMLCommonCellChannelsElement;
        "common-coalition-memberships": HTMLCommonCoalitionMembershipsElement;
        "common-coalitions": HTMLCommonCoalitionsElement;
        "common-organizations": HTMLCommonOrganizationsElement;
        "common-posts": HTMLCommonPostsElement;
        "common-prayer-notifications": HTMLCommonPrayerNotificationsElement;
        "common-prayer-requests": HTMLCommonPrayerRequestsElement;
        "common-threads": HTMLCommonThreadsElement;
        "create-update-modal": HTMLCreateUpdateModalElement;
        "directories-table": HTMLDirectoriesTableElement;
        "discussion-channels": HTMLDiscussionChannelsElement;
        "education-by-person": HTMLEducationByPersonElement;
        "education-entries": HTMLEducationEntriesElement;
        "file-versions": HTMLFileVersionsElement;
        "files-table": HTMLFilesTableElement;
        "generic-table": HTMLGenericTableElement;
        "group-memberships": HTMLGroupMembershipsElement;
        "groups-page": HTMLGroupsPageElement;
        "groups-row-access": HTMLGroupsRowAccessElement;
        "groups-table": HTMLGroupsTableElement;
        "locations-table": HTMLLocationsTableElement;
        "organizations-page": HTMLOrganizationsPageElement;
        "organizations-table": HTMLOrganizationsTableElement;
        "page-not-found": HTMLPageNotFoundElement;
        "page-prayer-requests": HTMLPagePrayerRequestsElement;
        "page-root": HTMLPageRootElement;
        "peers-table": HTMLPeersTableElement;
        "people-table": HTMLPeopleTableElement;
        "people-to-org-relationships": HTMLPeopleToOrgRelationshipsElement;
        "prayer-request-edit-page": HTMLPrayerRequestEditPageElement;
        "request-prayer-page": HTMLRequestPrayerPageElement;
        "role-column-grants": HTMLRoleColumnGrantsElement;
        "role-memberships": HTMLRoleMembershipsElement;
        "role-table-permissions": HTMLRoleTablePermissionsElement;
        "roles-page": HTMLRolesPageElement;
        "roles-table": HTMLRolesTableElement;
        "sc-budget-records": HTMLScBudgetRecordsElement;
        "sc-budgets": HTMLScBudgetsElement;
        "sc-ceremonies": HTMLScCeremoniesElement;
        "sc-change-to-plan": HTMLScChangeToPlanElement;
        "sc-field-regions-table": HTMLScFieldRegionsTableElement;
        "sc-field-zones": HTMLScFieldZonesElement;
        "sc-funding-accounts": HTMLScFundingAccountsElement;
        "sc-global-partner-assessments": HTMLScGlobalPartnerAssessmentsElement;
        "sc-global-partner-engagement-people": HTMLScGlobalPartnerEngagementPeopleElement;
        "sc-global-partner-engagements": HTMLScGlobalPartnerEngagementsElement;
        "sc-global-partner-performance": HTMLScGlobalPartnerPerformanceElement;
        "sc-internship-engagements": HTMLScInternshipEngagementsElement;
        "sc-known-languages-by-person": HTMLScKnownLanguagesByPersonElement;
        "sc-language-engagements": HTMLScLanguageEngagementsElement;
        "sc-languages": HTMLScLanguagesElement;
        "sc-locations": HTMLScLocationsElement;
        "sc-organization-locations": HTMLScOrganizationLocationsElement;
        "sc-organizations": HTMLScOrganizationsElement;
        "sc-partners": HTMLScPartnersElement;
        "sc-partnerships": HTMLScPartnershipsElement;
        "sc-people": HTMLScPeopleElement;
        "sc-person-unavailabilities": HTMLScPersonUnavailabilitiesElement;
        "sc-pinned-projects": HTMLScPinnedProjectsElement;
        "sc-posts": HTMLScPostsElement;
        "sc-product-scripture-references": HTMLScProductScriptureReferencesElement;
        "sc-products": HTMLScProductsElement;
        "sc-project-locations": HTMLScProjectLocationsElement;
        "sc-projects": HTMLScProjectsElement;
        "scripture-references": HTMLScriptureReferencesElement;
        "sil-country-codes": HTMLSilCountryCodesElement;
        "sil-language-index": HTMLSilLanguageIndexElement;
        "sil-languages-codes": HTMLSilLanguagesCodesElement;
        "sil-table-of-languages": HTMLSilTableOfLanguagesElement;
        "site-text": HTMLSiteTextElement;
        "stage-graph": HTMLStageGraphElement;
        "stage-notifications": HTMLStageNotificationsElement;
        "stage-role-column-grants": HTMLStageRoleColumnGrantsElement;
        "stages-table": HTMLStagesTableElement;
        "table-root": HTMLTableRootElement;
        "ticket-assignments": HTMLTicketAssignmentsElement;
        "ticket-feedback": HTMLTicketFeedbackElement;
        "ticket-graph": HTMLTicketGraphElement;
        "tickets-table": HTMLTicketsTableElement;
        "users-table": HTMLUsersTableElement;
        "work-estimates": HTMLWorkEstimatesElement;
        "work-records": HTMLWorkRecordsElement;
        "workflows-table": HTMLWorkflowsTableElement;
    }
}
declare namespace LocalJSX {
    interface AdminGroupMemberships {
    }
    interface AdminGroupRowAccess {
    }
    interface AdminGroups {
    }
    interface AdminPeople {
    }
    interface AdminRoleColumnGrants {
    }
    interface AdminRoleMemberships {
    }
    interface AdminRoleTablePermissions {
    }
    interface AdminRoles {
    }
    interface AdminUsers {
    }
    interface AppHome {
    }
    interface AppProfile {
        "match"?: MatchResults;
    }
    interface AppRoot {
        "history"?: RouterHistory;
    }
    interface CfCell2 {
        "cellType"?: CellType;
        "columnDescription"?: ColumnDescription;
        "rowId"?: number;
        "value"?: any;
    }
    interface CfHeader {
        "history"?: RouterHistory;
    }
    interface CfHeaderMenu {
        "history"?: RouterHistory;
        "onMenuClicked"?: (event: CustomEvent<MenuClickedEvent>) => void;
    }
    interface CfLogin {
        "history"?: RouterHistory;
    }
    interface CfNotif {
    }
    interface CfPagination {
        "currentPage"?: number;
        "history"?: RouterHistory;
        "onPageChanged"?: (event: CustomEvent<number>) => void;
        "pageUrl"?: string;
        "resultsPerPage"?: number;
        "totalRows"?: number;
    }
    interface CfRegister {
        "history"?: RouterHistory;
    }
    interface CfRow {
        "columnData"?: ColumnDescription[];
        "row"?: any;
    }
    interface CfTable {
        "columnData"?: ColumnDescription[];
        "rowData"?: any[];
    }
    interface CfTableBody {
        "columnData"?: ColumnDescription[];
        "rowData"?: any[];
    }
    interface CfTableFooter {
    }
    interface CfTiny {
        "onContentUpdate"?: (event: CustomEvent<TinyUpdateEvent>) => void;
        "uid"?: number;
    }
    interface CommonCellChannels {
    }
    interface CommonCoalitionMemberships {
    }
    interface CommonCoalitions {
    }
    interface CommonOrganizations {
    }
    interface CommonPosts {
    }
    interface CommonPrayerNotifications {
    }
    interface CommonPrayerRequests {
    }
    interface CommonThreads {
    }
    interface CreateUpdateModal {
        "isOpen"?: boolean;
        "modalTitle"?: String;
        "onModalClosed"?: (event: CustomEvent<boolean>) => void;
        "onModalDelete"?: (event: CustomEvent<boolean>) => void;
        "onModalOkay"?: (event: CustomEvent<boolean>) => void;
    }
    interface DirectoriesTable {
    }
    interface DiscussionChannels {
    }
    interface EducationByPerson {
    }
    interface EducationEntries {
    }
    interface FileVersions {
    }
    interface FilesTable {
    }
    interface GenericTable {
        "columns"?: Array<any>;
        "name"?: String;
        "onRowClicked"?: (event: CustomEvent<number>) => void;
        "values"?: Array<any>;
    }
    interface GroupMemberships {
    }
    interface GroupsPage {
    }
    interface GroupsRowAccess {
    }
    interface GroupsTable {
    }
    interface LocationsTable {
    }
    interface OrganizationsPage {
    }
    interface OrganizationsTable {
    }
    interface PageNotFound {
        "history"?: RouterHistory;
    }
    interface PagePrayerRequests {
        "history"?: RouterHistory;
    }
    interface PageRoot {
        "match"?: MatchResults;
    }
    interface PeersTable {
    }
    interface PeopleTable {
    }
    interface PeopleToOrgRelationships {
    }
    interface PrayerRequestEditPage {
        "history"?: RouterHistory;
        "requestId"?: any;
    }
    interface RequestPrayerPage {
        "history"?: RouterHistory;
    }
    interface RoleColumnGrants {
        "history"?: RouterHistory;
    }
    interface RoleMemberships {
    }
    interface RoleTablePermissions {
    }
    interface RolesPage {
    }
    interface RolesTable {
    }
    interface ScBudgetRecords {
    }
    interface ScBudgets {
    }
    interface ScCeremonies {
    }
    interface ScChangeToPlan {
    }
    interface ScFieldRegionsTable {
    }
    interface ScFieldZones {
    }
    interface ScFundingAccounts {
    }
    interface ScGlobalPartnerAssessments {
    }
    interface ScGlobalPartnerEngagementPeople {
    }
    interface ScGlobalPartnerEngagements {
    }
    interface ScGlobalPartnerPerformance {
    }
    interface ScInternshipEngagements {
    }
    interface ScKnownLanguagesByPerson {
    }
    interface ScLanguageEngagements {
    }
    interface ScLanguages {
    }
    interface ScLocations {
    }
    interface ScOrganizationLocations {
    }
    interface ScOrganizations {
    }
    interface ScPartners {
    }
    interface ScPartnerships {
    }
    interface ScPeople {
    }
    interface ScPersonUnavailabilities {
    }
    interface ScPinnedProjects {
    }
    interface ScPosts {
    }
    interface ScProductScriptureReferences {
    }
    interface ScProducts {
    }
    interface ScProjectLocations {
    }
    interface ScProjects {
    }
    interface ScriptureReferences {
    }
    interface SilCountryCodes {
    }
    interface SilLanguageIndex {
    }
    interface SilLanguagesCodes {
    }
    interface SilTableOfLanguages {
    }
    interface SiteText {
    }
    interface StageGraph {
    }
    interface StageNotifications {
    }
    interface StageRoleColumnGrants {
    }
    interface StagesTable {
    }
    interface TableRoot {
        "match"?: MatchResults;
    }
    interface TicketAssignments {
    }
    interface TicketFeedback {
    }
    interface TicketGraph {
    }
    interface TicketsTable {
    }
    interface UsersTable {
    }
    interface WorkEstimates {
    }
    interface WorkRecords {
    }
    interface WorkflowsTable {
    }
    interface IntrinsicElements {
        "admin-group-memberships": AdminGroupMemberships;
        "admin-group-row-access": AdminGroupRowAccess;
        "admin-groups": AdminGroups;
        "admin-people": AdminPeople;
        "admin-role-column-grants": AdminRoleColumnGrants;
        "admin-role-memberships": AdminRoleMemberships;
        "admin-role-table-permissions": AdminRoleTablePermissions;
        "admin-roles": AdminRoles;
        "admin-users": AdminUsers;
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "cf-cell2": CfCell2;
        "cf-header": CfHeader;
        "cf-header-menu": CfHeaderMenu;
        "cf-login": CfLogin;
        "cf-notif": CfNotif;
        "cf-pagination": CfPagination;
        "cf-register": CfRegister;
        "cf-row": CfRow;
        "cf-table": CfTable;
        "cf-table-body": CfTableBody;
        "cf-table-footer": CfTableFooter;
        "cf-tiny": CfTiny;
        "common-cell-channels": CommonCellChannels;
        "common-coalition-memberships": CommonCoalitionMemberships;
        "common-coalitions": CommonCoalitions;
        "common-organizations": CommonOrganizations;
        "common-posts": CommonPosts;
        "common-prayer-notifications": CommonPrayerNotifications;
        "common-prayer-requests": CommonPrayerRequests;
        "common-threads": CommonThreads;
        "create-update-modal": CreateUpdateModal;
        "directories-table": DirectoriesTable;
        "discussion-channels": DiscussionChannels;
        "education-by-person": EducationByPerson;
        "education-entries": EducationEntries;
        "file-versions": FileVersions;
        "files-table": FilesTable;
        "generic-table": GenericTable;
        "group-memberships": GroupMemberships;
        "groups-page": GroupsPage;
        "groups-row-access": GroupsRowAccess;
        "groups-table": GroupsTable;
        "locations-table": LocationsTable;
        "organizations-page": OrganizationsPage;
        "organizations-table": OrganizationsTable;
        "page-not-found": PageNotFound;
        "page-prayer-requests": PagePrayerRequests;
        "page-root": PageRoot;
        "peers-table": PeersTable;
        "people-table": PeopleTable;
        "people-to-org-relationships": PeopleToOrgRelationships;
        "prayer-request-edit-page": PrayerRequestEditPage;
        "request-prayer-page": RequestPrayerPage;
        "role-column-grants": RoleColumnGrants;
        "role-memberships": RoleMemberships;
        "role-table-permissions": RoleTablePermissions;
        "roles-page": RolesPage;
        "roles-table": RolesTable;
        "sc-budget-records": ScBudgetRecords;
        "sc-budgets": ScBudgets;
        "sc-ceremonies": ScCeremonies;
        "sc-change-to-plan": ScChangeToPlan;
        "sc-field-regions-table": ScFieldRegionsTable;
        "sc-field-zones": ScFieldZones;
        "sc-funding-accounts": ScFundingAccounts;
        "sc-global-partner-assessments": ScGlobalPartnerAssessments;
        "sc-global-partner-engagement-people": ScGlobalPartnerEngagementPeople;
        "sc-global-partner-engagements": ScGlobalPartnerEngagements;
        "sc-global-partner-performance": ScGlobalPartnerPerformance;
        "sc-internship-engagements": ScInternshipEngagements;
        "sc-known-languages-by-person": ScKnownLanguagesByPerson;
        "sc-language-engagements": ScLanguageEngagements;
        "sc-languages": ScLanguages;
        "sc-locations": ScLocations;
        "sc-organization-locations": ScOrganizationLocations;
        "sc-organizations": ScOrganizations;
        "sc-partners": ScPartners;
        "sc-partnerships": ScPartnerships;
        "sc-people": ScPeople;
        "sc-person-unavailabilities": ScPersonUnavailabilities;
        "sc-pinned-projects": ScPinnedProjects;
        "sc-posts": ScPosts;
        "sc-product-scripture-references": ScProductScriptureReferences;
        "sc-products": ScProducts;
        "sc-project-locations": ScProjectLocations;
        "sc-projects": ScProjects;
        "scripture-references": ScriptureReferences;
        "sil-country-codes": SilCountryCodes;
        "sil-language-index": SilLanguageIndex;
        "sil-languages-codes": SilLanguagesCodes;
        "sil-table-of-languages": SilTableOfLanguages;
        "site-text": SiteText;
        "stage-graph": StageGraph;
        "stage-notifications": StageNotifications;
        "stage-role-column-grants": StageRoleColumnGrants;
        "stages-table": StagesTable;
        "table-root": TableRoot;
        "ticket-assignments": TicketAssignments;
        "ticket-feedback": TicketFeedback;
        "ticket-graph": TicketGraph;
        "tickets-table": TicketsTable;
        "users-table": UsersTable;
        "work-estimates": WorkEstimates;
        "work-records": WorkRecords;
        "workflows-table": WorkflowsTable;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "admin-group-memberships": LocalJSX.AdminGroupMemberships & JSXBase.HTMLAttributes<HTMLAdminGroupMembershipsElement>;
            "admin-group-row-access": LocalJSX.AdminGroupRowAccess & JSXBase.HTMLAttributes<HTMLAdminGroupRowAccessElement>;
            "admin-groups": LocalJSX.AdminGroups & JSXBase.HTMLAttributes<HTMLAdminGroupsElement>;
            "admin-people": LocalJSX.AdminPeople & JSXBase.HTMLAttributes<HTMLAdminPeopleElement>;
            "admin-role-column-grants": LocalJSX.AdminRoleColumnGrants & JSXBase.HTMLAttributes<HTMLAdminRoleColumnGrantsElement>;
            "admin-role-memberships": LocalJSX.AdminRoleMemberships & JSXBase.HTMLAttributes<HTMLAdminRoleMembershipsElement>;
            "admin-role-table-permissions": LocalJSX.AdminRoleTablePermissions & JSXBase.HTMLAttributes<HTMLAdminRoleTablePermissionsElement>;
            "admin-roles": LocalJSX.AdminRoles & JSXBase.HTMLAttributes<HTMLAdminRolesElement>;
            "admin-users": LocalJSX.AdminUsers & JSXBase.HTMLAttributes<HTMLAdminUsersElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "cf-cell2": LocalJSX.CfCell2 & JSXBase.HTMLAttributes<HTMLCfCell2Element>;
            "cf-header": LocalJSX.CfHeader & JSXBase.HTMLAttributes<HTMLCfHeaderElement>;
            "cf-header-menu": LocalJSX.CfHeaderMenu & JSXBase.HTMLAttributes<HTMLCfHeaderMenuElement>;
            "cf-login": LocalJSX.CfLogin & JSXBase.HTMLAttributes<HTMLCfLoginElement>;
            "cf-notif": LocalJSX.CfNotif & JSXBase.HTMLAttributes<HTMLCfNotifElement>;
            "cf-pagination": LocalJSX.CfPagination & JSXBase.HTMLAttributes<HTMLCfPaginationElement>;
            "cf-register": LocalJSX.CfRegister & JSXBase.HTMLAttributes<HTMLCfRegisterElement>;
            "cf-row": LocalJSX.CfRow & JSXBase.HTMLAttributes<HTMLCfRowElement>;
            "cf-table": LocalJSX.CfTable & JSXBase.HTMLAttributes<HTMLCfTableElement>;
            "cf-table-body": LocalJSX.CfTableBody & JSXBase.HTMLAttributes<HTMLCfTableBodyElement>;
            "cf-table-footer": LocalJSX.CfTableFooter & JSXBase.HTMLAttributes<HTMLCfTableFooterElement>;
            "cf-tiny": LocalJSX.CfTiny & JSXBase.HTMLAttributes<HTMLCfTinyElement>;
            "common-cell-channels": LocalJSX.CommonCellChannels & JSXBase.HTMLAttributes<HTMLCommonCellChannelsElement>;
            "common-coalition-memberships": LocalJSX.CommonCoalitionMemberships & JSXBase.HTMLAttributes<HTMLCommonCoalitionMembershipsElement>;
            "common-coalitions": LocalJSX.CommonCoalitions & JSXBase.HTMLAttributes<HTMLCommonCoalitionsElement>;
            "common-organizations": LocalJSX.CommonOrganizations & JSXBase.HTMLAttributes<HTMLCommonOrganizationsElement>;
            "common-posts": LocalJSX.CommonPosts & JSXBase.HTMLAttributes<HTMLCommonPostsElement>;
            "common-prayer-notifications": LocalJSX.CommonPrayerNotifications & JSXBase.HTMLAttributes<HTMLCommonPrayerNotificationsElement>;
            "common-prayer-requests": LocalJSX.CommonPrayerRequests & JSXBase.HTMLAttributes<HTMLCommonPrayerRequestsElement>;
            "common-threads": LocalJSX.CommonThreads & JSXBase.HTMLAttributes<HTMLCommonThreadsElement>;
            "create-update-modal": LocalJSX.CreateUpdateModal & JSXBase.HTMLAttributes<HTMLCreateUpdateModalElement>;
            "directories-table": LocalJSX.DirectoriesTable & JSXBase.HTMLAttributes<HTMLDirectoriesTableElement>;
            "discussion-channels": LocalJSX.DiscussionChannels & JSXBase.HTMLAttributes<HTMLDiscussionChannelsElement>;
            "education-by-person": LocalJSX.EducationByPerson & JSXBase.HTMLAttributes<HTMLEducationByPersonElement>;
            "education-entries": LocalJSX.EducationEntries & JSXBase.HTMLAttributes<HTMLEducationEntriesElement>;
            "file-versions": LocalJSX.FileVersions & JSXBase.HTMLAttributes<HTMLFileVersionsElement>;
            "files-table": LocalJSX.FilesTable & JSXBase.HTMLAttributes<HTMLFilesTableElement>;
            "generic-table": LocalJSX.GenericTable & JSXBase.HTMLAttributes<HTMLGenericTableElement>;
            "group-memberships": LocalJSX.GroupMemberships & JSXBase.HTMLAttributes<HTMLGroupMembershipsElement>;
            "groups-page": LocalJSX.GroupsPage & JSXBase.HTMLAttributes<HTMLGroupsPageElement>;
            "groups-row-access": LocalJSX.GroupsRowAccess & JSXBase.HTMLAttributes<HTMLGroupsRowAccessElement>;
            "groups-table": LocalJSX.GroupsTable & JSXBase.HTMLAttributes<HTMLGroupsTableElement>;
            "locations-table": LocalJSX.LocationsTable & JSXBase.HTMLAttributes<HTMLLocationsTableElement>;
            "organizations-page": LocalJSX.OrganizationsPage & JSXBase.HTMLAttributes<HTMLOrganizationsPageElement>;
            "organizations-table": LocalJSX.OrganizationsTable & JSXBase.HTMLAttributes<HTMLOrganizationsTableElement>;
            "page-not-found": LocalJSX.PageNotFound & JSXBase.HTMLAttributes<HTMLPageNotFoundElement>;
            "page-prayer-requests": LocalJSX.PagePrayerRequests & JSXBase.HTMLAttributes<HTMLPagePrayerRequestsElement>;
            "page-root": LocalJSX.PageRoot & JSXBase.HTMLAttributes<HTMLPageRootElement>;
            "peers-table": LocalJSX.PeersTable & JSXBase.HTMLAttributes<HTMLPeersTableElement>;
            "people-table": LocalJSX.PeopleTable & JSXBase.HTMLAttributes<HTMLPeopleTableElement>;
            "people-to-org-relationships": LocalJSX.PeopleToOrgRelationships & JSXBase.HTMLAttributes<HTMLPeopleToOrgRelationshipsElement>;
            "prayer-request-edit-page": LocalJSX.PrayerRequestEditPage & JSXBase.HTMLAttributes<HTMLPrayerRequestEditPageElement>;
            "request-prayer-page": LocalJSX.RequestPrayerPage & JSXBase.HTMLAttributes<HTMLRequestPrayerPageElement>;
            "role-column-grants": LocalJSX.RoleColumnGrants & JSXBase.HTMLAttributes<HTMLRoleColumnGrantsElement>;
            "role-memberships": LocalJSX.RoleMemberships & JSXBase.HTMLAttributes<HTMLRoleMembershipsElement>;
            "role-table-permissions": LocalJSX.RoleTablePermissions & JSXBase.HTMLAttributes<HTMLRoleTablePermissionsElement>;
            "roles-page": LocalJSX.RolesPage & JSXBase.HTMLAttributes<HTMLRolesPageElement>;
            "roles-table": LocalJSX.RolesTable & JSXBase.HTMLAttributes<HTMLRolesTableElement>;
            "sc-budget-records": LocalJSX.ScBudgetRecords & JSXBase.HTMLAttributes<HTMLScBudgetRecordsElement>;
            "sc-budgets": LocalJSX.ScBudgets & JSXBase.HTMLAttributes<HTMLScBudgetsElement>;
            "sc-ceremonies": LocalJSX.ScCeremonies & JSXBase.HTMLAttributes<HTMLScCeremoniesElement>;
            "sc-change-to-plan": LocalJSX.ScChangeToPlan & JSXBase.HTMLAttributes<HTMLScChangeToPlanElement>;
            "sc-field-regions-table": LocalJSX.ScFieldRegionsTable & JSXBase.HTMLAttributes<HTMLScFieldRegionsTableElement>;
            "sc-field-zones": LocalJSX.ScFieldZones & JSXBase.HTMLAttributes<HTMLScFieldZonesElement>;
            "sc-funding-accounts": LocalJSX.ScFundingAccounts & JSXBase.HTMLAttributes<HTMLScFundingAccountsElement>;
            "sc-global-partner-assessments": LocalJSX.ScGlobalPartnerAssessments & JSXBase.HTMLAttributes<HTMLScGlobalPartnerAssessmentsElement>;
            "sc-global-partner-engagement-people": LocalJSX.ScGlobalPartnerEngagementPeople & JSXBase.HTMLAttributes<HTMLScGlobalPartnerEngagementPeopleElement>;
            "sc-global-partner-engagements": LocalJSX.ScGlobalPartnerEngagements & JSXBase.HTMLAttributes<HTMLScGlobalPartnerEngagementsElement>;
            "sc-global-partner-performance": LocalJSX.ScGlobalPartnerPerformance & JSXBase.HTMLAttributes<HTMLScGlobalPartnerPerformanceElement>;
            "sc-internship-engagements": LocalJSX.ScInternshipEngagements & JSXBase.HTMLAttributes<HTMLScInternshipEngagementsElement>;
            "sc-known-languages-by-person": LocalJSX.ScKnownLanguagesByPerson & JSXBase.HTMLAttributes<HTMLScKnownLanguagesByPersonElement>;
            "sc-language-engagements": LocalJSX.ScLanguageEngagements & JSXBase.HTMLAttributes<HTMLScLanguageEngagementsElement>;
            "sc-languages": LocalJSX.ScLanguages & JSXBase.HTMLAttributes<HTMLScLanguagesElement>;
            "sc-locations": LocalJSX.ScLocations & JSXBase.HTMLAttributes<HTMLScLocationsElement>;
            "sc-organization-locations": LocalJSX.ScOrganizationLocations & JSXBase.HTMLAttributes<HTMLScOrganizationLocationsElement>;
            "sc-organizations": LocalJSX.ScOrganizations & JSXBase.HTMLAttributes<HTMLScOrganizationsElement>;
            "sc-partners": LocalJSX.ScPartners & JSXBase.HTMLAttributes<HTMLScPartnersElement>;
            "sc-partnerships": LocalJSX.ScPartnerships & JSXBase.HTMLAttributes<HTMLScPartnershipsElement>;
            "sc-people": LocalJSX.ScPeople & JSXBase.HTMLAttributes<HTMLScPeopleElement>;
            "sc-person-unavailabilities": LocalJSX.ScPersonUnavailabilities & JSXBase.HTMLAttributes<HTMLScPersonUnavailabilitiesElement>;
            "sc-pinned-projects": LocalJSX.ScPinnedProjects & JSXBase.HTMLAttributes<HTMLScPinnedProjectsElement>;
            "sc-posts": LocalJSX.ScPosts & JSXBase.HTMLAttributes<HTMLScPostsElement>;
            "sc-product-scripture-references": LocalJSX.ScProductScriptureReferences & JSXBase.HTMLAttributes<HTMLScProductScriptureReferencesElement>;
            "sc-products": LocalJSX.ScProducts & JSXBase.HTMLAttributes<HTMLScProductsElement>;
            "sc-project-locations": LocalJSX.ScProjectLocations & JSXBase.HTMLAttributes<HTMLScProjectLocationsElement>;
            "sc-projects": LocalJSX.ScProjects & JSXBase.HTMLAttributes<HTMLScProjectsElement>;
            "scripture-references": LocalJSX.ScriptureReferences & JSXBase.HTMLAttributes<HTMLScriptureReferencesElement>;
            "sil-country-codes": LocalJSX.SilCountryCodes & JSXBase.HTMLAttributes<HTMLSilCountryCodesElement>;
            "sil-language-index": LocalJSX.SilLanguageIndex & JSXBase.HTMLAttributes<HTMLSilLanguageIndexElement>;
            "sil-languages-codes": LocalJSX.SilLanguagesCodes & JSXBase.HTMLAttributes<HTMLSilLanguagesCodesElement>;
            "sil-table-of-languages": LocalJSX.SilTableOfLanguages & JSXBase.HTMLAttributes<HTMLSilTableOfLanguagesElement>;
            "site-text": LocalJSX.SiteText & JSXBase.HTMLAttributes<HTMLSiteTextElement>;
            "stage-graph": LocalJSX.StageGraph & JSXBase.HTMLAttributes<HTMLStageGraphElement>;
            "stage-notifications": LocalJSX.StageNotifications & JSXBase.HTMLAttributes<HTMLStageNotificationsElement>;
            "stage-role-column-grants": LocalJSX.StageRoleColumnGrants & JSXBase.HTMLAttributes<HTMLStageRoleColumnGrantsElement>;
            "stages-table": LocalJSX.StagesTable & JSXBase.HTMLAttributes<HTMLStagesTableElement>;
            "table-root": LocalJSX.TableRoot & JSXBase.HTMLAttributes<HTMLTableRootElement>;
            "ticket-assignments": LocalJSX.TicketAssignments & JSXBase.HTMLAttributes<HTMLTicketAssignmentsElement>;
            "ticket-feedback": LocalJSX.TicketFeedback & JSXBase.HTMLAttributes<HTMLTicketFeedbackElement>;
            "ticket-graph": LocalJSX.TicketGraph & JSXBase.HTMLAttributes<HTMLTicketGraphElement>;
            "tickets-table": LocalJSX.TicketsTable & JSXBase.HTMLAttributes<HTMLTicketsTableElement>;
            "users-table": LocalJSX.UsersTable & JSXBase.HTMLAttributes<HTMLUsersTableElement>;
            "work-estimates": LocalJSX.WorkEstimates & JSXBase.HTMLAttributes<HTMLWorkEstimatesElement>;
            "work-records": LocalJSX.WorkRecords & JSXBase.HTMLAttributes<HTMLWorkRecordsElement>;
            "workflows-table": LocalJSX.WorkflowsTable & JSXBase.HTMLAttributes<HTMLWorkflowsTableElement>;
        }
    }
}
